{
	"info": {
		"_postman_id": "520eb1f2-43ad-4480-a5f6-dbf6bd255fcb",
		"name": "ANB API - Backend (Postman Collection)",
		"description": "Colección para documentar y probar el backend ANB (Gin + JWT). Prefijo de rutas: /api/v1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47549701",
		"_collection_link": "https://maorm9626-3795003.postman.co/workspace/e4c652de-2479-47a9-892d-b836243ff5d5/collection/47549701-520eb1f2-43ad-4480-a5f6-dbf6bd255fcb?action=share&source=collection_link&creator=47549701"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "SIGNUP 201",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"Camila\",\n  \"last_name\": \"Gomez\",\n  \"email\": \"cagomez@example.com\",\n  \"password\": \"Password123!\",\n  \"password2\": \"Password123!\",\n  \"city\": \"Bogotá\",\n  \"country\": \"Colombia\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						},
						"description": "Crea un usuario nuevo."
					},
					"response": []
				},
				{
					"name": "SIGNUP 400",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"Carlos\",\n  \"last_name\": \"Toro\",\n  \"email\": \"ctoro@example.com\",\n  \"password\": \"Password123!\",\n  \"password2\": \"Password123!\",\n  \"city\": \"Bogotá\",\n  \"country\": \"Colombia\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"signup"
							]
						},
						"description": "Crea un usuario nuevo."
					},
					"response": []
				},
				{
					"name": "LOGIN 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let data={};",
									"try{data=pm.response.json();}catch(e){}",
									"if(data&&data.access_token){pm.collectionVariables.set('token',data.access_token);pm.test('JWT guardado',function(){pm.expect(pm.collectionVariables.get('token')).to.be.a('string');});}",
									"else{pm.test('No se recibió access_token',function(){pm.expect(false).to.be.true;});}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"mauricio@example.com\",\n  \"password\": \"Password123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Autentica y devuelve JWT."
					},
					"response": []
				},
				{
					"name": "LOGIN 200 Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let data={};",
									"try{data=pm.response.json();}catch(e){}",
									"if(data&&data.access_token){pm.collectionVariables.set('token',data.access_token);pm.test('JWT guardado',function(){pm.expect(pm.collectionVariables.get('token')).to.be.a('string');});}",
									"else{pm.test('No se recibió access_token',function(){pm.expect(false).to.be.true;});}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"cagomez@example.com\",\n  \"password\": \"Password123!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Autentica y devuelve JWT."
					},
					"response": []
				},
				{
					"name": "LOGIN 401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let data={};",
									"try{data=pm.response.json();}catch(e){}",
									"if(data&&data.access_token){pm.collectionVariables.set('token',data.access_token);pm.test('JWT guardado',function(){pm.expect(pm.collectionVariables.get('token')).to.be.a('string');});}",
									"else{pm.test('No se recibió access_token',function(){pm.expect(false).to.be.true;});}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"mauricio@example.com\",\n  \"password\": \"Password1234!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Autentica y devuelve JWT."
					},
					"response": []
				}
			]
		},
		{
			"name": "Videos (protegido)",
			"item": [
				{
					"name": "POST VIDEO 201",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Mi video de prueba",
									"type": "text"
								},
								{
									"key": "video",
									"type": "file",
									"src": "postman-cloud:///1f08da57-5606-4fe0-bf93-fdd720a40840"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/videos/upload",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"upload"
							]
						},
						"description": "Sube un video. Requiere Bearer {{token}}."
					},
					"response": []
				},
				{
					"name": "POST VIDEO 400",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Mi video de prueba",
									"type": "text"
								},
								{
									"key": "video",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/videos/upload",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"upload"
							]
						},
						"description": "Sube un video. Requiere Bearer {{token}}."
					},
					"response": []
				},
				{
					"name": "POST VIDEO 401",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Mi video de prueba",
									"type": "text"
								},
								{
									"key": "video",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/videos/upload",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"upload"
							]
						},
						"description": "Sube un video. Requiere Bearer {{token}}."
					},
					"response": []
				},
				{
					"name": "LIST VIDEOS 200",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos"
							]
						},
						"description": "Lista mis videos."
					},
					"response": []
				},
				{
					"name": "LIST VIDEOS 401",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos"
							]
						},
						"description": "Lista mis videos."
					},
					"response": []
				},
				{
					"name": "GET VIDEO BY ID 200",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}"
							]
						},
						"description": "Detalle de un video."
					},
					"response": []
				},
				{
					"name": "GET VIDEO BY ID 401",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}"
							]
						},
						"description": "Detalle de un video."
					},
					"response": []
				},
				{
					"name": "GET VIDEO BY ID 403",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}"
							]
						},
						"description": "Detalle de un video."
					},
					"response": []
				},
				{
					"name": "GET VIDEO BY ID 404",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}1"
							]
						},
						"description": "Detalle de un video."
					},
					"response": []
				},
				{
					"name": "DELETE VIDEO 200",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}"
							]
						},
						"description": "Eliminar un video propio."
					},
					"response": []
				},
				{
					"name": "DELETE VIDEO 400",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}"
							]
						},
						"description": "Eliminar un video propio."
					},
					"response": []
				},
				{
					"name": "DELETE VIDEO 401",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}"
							]
						},
						"description": "Eliminar un video propio."
					},
					"response": []
				},
				{
					"name": "DELETE VIDEO 403",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}"
							]
						},
						"description": "Eliminar un video propio."
					},
					"response": []
				},
				{
					"name": "DELETE VIDEO 404",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}1"
							]
						},
						"description": "Eliminar un video propio."
					},
					"response": []
				},
				{
					"name": "MARK PROCESSED VIDEO",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/videos/{{video_id}}/mark-processed",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"videos",
								"{{video_id}}",
								"mark-processed"
							]
						},
						"description": "Marcar video como procesado."
					},
					"response": []
				}
			]
		},
		{
			"name": "Público (no requiere token)",
			"item": [
				{
					"name": "PUBLIC VIDEOS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/public/videos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"videos"
							]
						},
						"description": "Lista videos públicos."
					},
					"response": []
				},
				{
					"name": "RANKINGS 200",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/public/rankings",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"rankings"
							]
						},
						"description": "Ranking por votos."
					},
					"response": []
				},
				{
					"name": "RANKINGS 400",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/public/rankings",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"rankings"
							]
						},
						"description": "Ranking por votos."
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			}
		},
		{
			"name": "Votes (protegido)",
			"item": [
				{
					"name": "CREATE VOTE 200",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base_url}}/api/v1/public/videos/{{video_id}}/vote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"videos",
								"{{video_id}}",
								"vote"
							]
						},
						"description": "Crear voto (requiere token)."
					},
					"response": []
				},
				{
					"name": "CREATE VOTE 400",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/public/videos/{{video_id}}/vote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"videos",
								"{{video_id}}",
								"vote"
							]
						},
						"description": "Crear voto (requiere token)."
					},
					"response": []
				},
				{
					"name": "CREATE VOTE 404",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/public/videos/{{video_id}}/vote1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"videos",
								"{{video_id}}",
								"vote1"
							]
						},
						"description": "Crear voto (requiere token)."
					},
					"response": []
				},
				{
					"name": "CREATE VOTE 401",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/public/videos/{{video_id}}/vote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"videos",
								"{{video_id}}",
								"vote"
							]
						},
						"description": "Crear voto (requiere token)."
					},
					"response": []
				},
				{
					"name": "DELETE VOTE",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/v1/public/videos/{{video_id}}/vote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"videos",
								"{{video_id}}",
								"vote"
							]
						},
						"description": "Eliminar mi voto."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:9090"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "video_id",
			"value": "1"
		}
	]
}